<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cnpc.pao</groupId>
	<artifactId>PAO</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>war</packaging>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<errai.version>2.1.0.Final</errai.version>
		<gwt.version>2.4.0</gwt.version>
		<jboss.bom.version>1.0.0.Final</jboss.bom.version>
		<weld.version>1.1.6.Final</weld.version>
		<errai.run.target>http://localhost:8080/pao/errai-test.html</errai.run.target>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-6.0</artifactId>
				<version>3.0.1.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>4.2.0-SNAPSHOT</version>
				<scope>provided</scope>
			</dependency>
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0-with-tools stack (you can 
				read this as the JBoss stack of the Java EE 6 APIs, with some extras tools 
				for your project, such as Arquillian for testing), the jboss-javaee-6.0-with-hibernate 
				stack (you can read this as the JBoss stack of the Java EE 6 APIs, with extras 
				from the Hibernate family of projects) and the jboss-javaee-6.0-with-errai 
				stack (you can read this as the JBoss stack of the Java EE 6 APIs, with support 
				for Errai) -->
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-tools</artifactId>
				<version>${jboss.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
				<version>${jboss.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-errai</artifactId>
				<version>${jboss.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.0_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.faces</groupId>
			<artifactId>jboss-jsf-api_2.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- 以下2个jar是arquillian测试时需要的jar -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version><!--$NO-MVN-MAN-VER$ -->
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<version>1.0.0.CR7</version><!--$NO-MVN-MAN-VER$ -->
			<scope>test</scope>
		</dependency>
		<!-- 打印日志logging框架 -->
		<dependency>
			<groupId>org.jboss.solder</groupId>
			<artifactId>solder-impl</artifactId>
			<version>3.1.0.Final</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.solder</groupId>
			<artifactId>solder-tooling</artifactId>
			<version>3.1.1.Final</version>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>
        <!-- el表达式？这个依赖的必要性没有测试过 -->
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<version>2.2.1-b05</version>
		</dependency>
		<!-- PrimeFaces 依赖 -->
		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>3.4.1</version>
		</dependency>

		<!-- The next set of dependencies are for Errai項目暫時未使用到的 -->
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-bus</artifactId>
			<exclusions>
				<exclusion>
					<groupId>javax.inject</groupId>
					<artifactId>javax.inject</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.annotation</groupId>
					<artifactId>jsr250-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-ioc</artifactId>
			<exclusions>
				<exclusion>
					<groupId>javax.inject</groupId>
					<artifactId>javax.inject</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.annotation</groupId>
					<artifactId>jsr250-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-tools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mvel</groupId>
			<artifactId>mvel2</artifactId>
		</dependency>

		<!-- CDI/ Errai Integration Modules -->
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-cdi-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-javax-enterprise</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-weld-integration</artifactId>
			<exclusions>
				<exclusion>
					<groupId>
                        org.jboss.weld.servlet
                    </groupId>
					<artifactId>weld-servlet</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<scope>provided</scope>
		</dependency>


	</dependencies>
	<repositories>
		<repository>
			<id>JBOSS_NEXUS</id>
			<url>http://repository.jboss.org/nexus/content/groups/public</url>
		</repository>
		<repository>
			<id>prime-repo</id>
			<name>PrimeFaces Maven Repository</name>
			<url>http://repository.primefaces.org</url>
			<layout>default</layout>
		</repository>

	</repositories>
	<build>
		<finalName>pao</finalName>

		<pluginManagement>

			<plugins>
				<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation 
					processors -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.1.1</version>
					<configuration>
						<!-- We must exclude GWT client local classes from the deployment, 
							or classpath scanners such as Hibernate and Weld get confused when the webapp 
							is bootstrapping. -->
						<packagingExcludes>**/javax/**/*.*,**/client/local/**/*.class</packagingExcludes>
						<archive>
							<manifestEntries>
								<Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>

				<!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
				<!-- To use run: mvn package jboss-as:deploy -->
				<plugin>
					<groupId>org.jboss.as.plugins</groupId>
					<artifactId>jboss-as-maven-plugin</artifactId>
					<version>7.1.1.Final</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.4.1</version>
					<configuration>
						<filesets>
							<fileset>
								<directory>.errai</directory>
								<includes>
									<include>**</include>
								</includes>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				<!-- m2e (Maven integration for Eclipse) requires the following configuration -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>gwt-maven-plugin</artifactId>
										<versionRange>[2.3.0,)</versionRange>
										<goals>
											<goal>resources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- GWT plugin to compile client-side java code to javascript and to 
				run GWT development mode 這個是無server的配置，如果需要配置server，web也需要增加listener，
				具體視cdi使用情況而定，參照官方文檔-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.4.0</version>
				<configuration>
					<logLevel>INFO</logLevel>
					<runTarget>${errai.run.target}</runTarget>
					<extraJvmArgs>-Xmx512m</extraJvmArgs>
					<soyc>false</soyc>
					<noserver>true</noserver>
				</configuration>

				<executions>
					<execution>
						<id>gwt-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
					<execution>
						<id>gwt-compile</id>
						<goals>
							<goal>resources</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<!-- 自定义的profile，profile是maven在不同的环境，不同的操作下进行的自定义的原型模式，可以用命令行-P+profile_id激活 -->
	<profiles>
		<profile>
			<!-- The default profile skips all tests, though you can tune it to run 
				just unit tests based on a custom pattern -->
			<!-- Seperate profiles are provided for running all tests, including Arquillian 
				tests that execute in the specified container -->
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.4.3</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>jboss7-as-managed</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.as</groupId>
					<artifactId>jboss-as-arquillian-container-managed</artifactId>
					<version>7.1.1.Final</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>jboss7-as-remote</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.as</groupId>
					<artifactId>jboss-as-arquillian-container-remote</artifactId>
					<version>7.1.1.Final</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>
